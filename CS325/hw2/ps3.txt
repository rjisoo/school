algorithm3(arryB[], sizeA, arryC[], int sizeC) {
    minB = 500
    totalB = 0
    left = 0
    for( i = 0; i <= sizeA; i++) {
        totalB = arryB[i];
        for(int j = i+1; j <= sizeA; j++)
            totalB += arryB[j];
            if(totalB < minB) {
                minB = totalB;
                left = i;
        }
    }

    minB will be the subarray suffix of the Array A that was split into Array B and Array C

    To find the prefix of Array C:
	a loop that adds one index to the total each loop, 
    1st loop will result in total = array[0]
    compare total to minB: total + minB = sum
    if sum is less than predefined constant max number N then n = sum and totalKeeper = total
    2nd loop will result in total = array[0] + array[1]
    compare new total to minB: total + minB = sum
    if sum is less than old sum N then n = sum and totalKeeper = total

    nth loop total = array[0] + array[1] + array[2]...+ array[n]
    do last comparison
    last if statement

    the result will be a prefix sub array whose total (the totalKeeper) + minB will have the cloesest to zero sum. 



print  suffix of Array B  + Prefix of Array C = cloesest to Zero sub array of Array A Diivided into subarrays B and C 