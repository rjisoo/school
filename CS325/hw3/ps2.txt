Array A
mergesort(A) {
	If A length = 1
		return A
	else
		A(0...[length/2]floor) = Al
		A([length/2]ceiling...length) = Ar
		Al = Mergesort(Al)
		Ar = Mergesort(Ar)
		return Merge(Al, Ar)
}

Merge(left, right) {
	if left size = 0
		return right
	if right size = 0 
		return left
	if left[0] < right [0]
		return left [0] concatenation Merge(left[1...end], right)
	else
		return right [0] concatenation Merge(left, right[1...end])
}

Algorithm2
{
	MergeSort(Sb)
	MergeSort(Sc)

	Array A = Sb concatenation Sc

	sum1 = A[0] + A[end]
	sum2 = A[sb size] + A[sb size + 1] (will get the end of the first array and the start of the second array)
	if absolute of sum1 < absolute of sum2
		return sum1
	else 
		return sum2
}